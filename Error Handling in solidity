//write a smart contract that implements the require(), assert() and revert() statements
// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;
contract ErrorHandling {

    function totestRequire(uint num) public pure returns(string memory) {
        require(num > 15, "Input should be greater than 15");
         return "Valid Input(Require)";
    }

    function totestRevert(uint num) public pure returns (string memory) {
        if (num <= 20) {                                   //if yes then revert else valid input
            revert("Input should be greater than 20");
        }
            return "Valid Input(Revert)";                   
       
    }

    uint public n;
    function totestAssert() public view returns (string memory){
        assert(n == 0);
        return "Passed Assert Test";
    }
    function increment_n() public
    {
        n++;
    }

}

